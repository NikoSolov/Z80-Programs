https://svofski.github.io/pretty-8080-assembler/

[]		пецхярп хкх пецхярпнбюъ оюпю
[[]]		ъвеийю оюлърх, юдпеяселюъ пецхярпнбни оюпни
<= =>		мюопюбкемхе оепедювх дюммшу
DATA [8]	аюир дюммшу
DATA [16]	дбю аюирю дюммшу
ADDR [16]	16-рх пюгпъдмши юдпеяя ъвеийх оюлърх

йнд	лмелнмхйю	деиярбхе	пецхярпш	вхякн
	йнлюмдш		йнлюмдш		опхгмюйнб	рюйрнб

					S Z AC P C
7F	MOV	A,A	[A]<=[A]	- - -  - -	5
78	MOV	A,B	[A]<=[B]	- - -  - -	5
79	MOV	A,C	[A]<=[C]	- - -  - -	5
7A	MOV	A,D	[A]<=[D]	- - -  - -	5
7B	MOV	A,E	[A]<=[E]	- - -  - -	5
7C	MOV	A,H	[A]<=[H]	- - -  - -	5
7D	MOV	A,L	[A]<=[L]	- - -  - -	5

47	MOV	B,A	[B]<=[A]	- - -  - -	5
40	MOV	B,B	[B]<=[B]	- - -  - -	5
41	MOV	B,C	[B]<=[C]	- - -  - -	5
42	MOV	B,D	[B]<=[D]	- - -  - -	5
43	MOV	B,E	[B]<=[E]	- - -  - -	5
44	MOV	B,H	[B]<=[H]	- - -  - -	5
45	MOV	B,L	[B]<=[L]	- - -  - -	5

4F	MOV	C,A	[C]<=[A]	- - -  - -	5
48	MOV	C,B	[C]<=[B]	- - -  - -	5
49	MOV	C,C	[C]<=[C]	- - -  - -	5
4A	MOV	C,D	[C]<=[D]	- - -  - -	5
4B	MOV	C,E	[C]<=[E]	- - -  - -	5
4C	MOV	C,H	[C]<=[H]	- - -  - -	5
4D	MOV	C,L	[C]<=[L]	- - -  - -	5

57	MOV	D,A	[D]<=[A]	- - -  - -	5
50	MOV	D,B	[D]<=[B]	- - -  - -	5
51	MOV	D,C	[D]<=[C]	- - -  - -	5
52	MOV	D,D	[D]<=[D]	- - -  - -	5
53	MOV	D,E	[D]<=[E]	- - -  - -	5
54	MOV	D,H	[D]<=[H]	- - -  - -	5
55	MOV	D,L	[D]<=[L]	- - -  - -	5

5F	MOV	E,A	[E]<=[A]	- - -  - -	5
58	MOV	E,B	[E]<=[B]	- - -  - -	5
59	MOV	E,C	[E]<=[C]	- - -  - -	5
5A	MOV	E,D	[E]<=[D]	- - -  - -	5
5B	MOV	E,E	[E]<=[E]	- - -  - -	5
5C	MOV	E,H	[E]<=[H]	- - -  - -	5
5D	MOV	E,L	[E]<=[L]	- - -  - -	5

67	MOV	H,A	[H]<=[A]	- - -  - -	5
60	MOV	H,B	[H]<=[B]	- - -  - -	5
61	MOV	H,C	[H]<=[C]	- - -  - -	5
62	MOV	H,D	[H]<=[D]	- - -  - -	5
63	MOV	H,E	[H]<=[E]	- - -  - -	5
64	MOV	H,H	[H]<=[H]	- - -  - -	5
65	MOV	H,L	[H]<=[L]	- - -  - -	5

6F	MOV	L,A	[L]<=[A]	- - -  - -	5
68	MOV	L,B	[L]<=[B]	- - -  - -	5
69	MOV	L,C	[L]<=[C]	- - -  - -	5
6A	MOV	L,D	[L]<=[D]	- - -  - -	5
6B	MOV	L,E	[L]<=[E]	- - -  - -	5
6C	MOV	L,H	[L]<=[H]	- - -  - -	5
6D	MOV	L,L	[L]<=[L]	- - -  - -	5

7E	MOV	A,M	[A]<=[[HL]]	- - -  - -	7
46	MOV	B,M	[B]<=[[HL]]	- - -  - -	7
4E	MOV	C,M	[C]<=[[HL]]	- - -  - -	7
56	MOV	D,M	[D]<=[[HL]]	- - -  - -	7
5E	MOV	E,M	[E]<=[[HL]]	- - -  - -	7
66	MOV	H,M	[H]<=[[HL]]	- - -  - -	7
6E	MOV	L,M	[L]<=[[HL]]	- - -  - -	7

77	MOV	M,A	[[HL]]<=[A]	- - -  - -	7
70	MOV	M,B	[[HL]]<=[B]	- - -  - -	7
71	MOV	M,C	[[HL]]<=[C]	- - -  - -	7
72	MOV	M,D	[[HL]]<=[D]	- - -  - -	7
73	MOV	M,E	[[HL]]<=[E]	- - -  - -	7
74	MOV	M,H	[[HL]]<=[H]	- - -  - -	7
75	MOV	M,L	[[HL]]<=[L]	- - -  - -	7
==============================================================
3E[]	MVI	A,[8]	[A]<=DATA[8]	- - -  - -	7
06[]	MVI	B,[8]	[B]<=DATA[8]	- - -  - -	7
0E[]	MVI	C,[8]	[C]<=DATA[8]	- - -  - -	7
16[]	MVI	D,[8]	[D]<=DATA[8]	- - -  - -	7
1E[]	MVI	E,[8]	[E]<=DATA[8]	- - -  - -	7
26[]	MVI	H,[8]	[H]<=DATA[8]	- - -  - -	7
2E[]	MVI	L,[8]	[L]<=DATA[8]	- - -  - -	7

36[]	MVI	M,[8]	[[HL]]<=[8]	- - -  - -	10
==============================================================
01[][]	LXI	B,[16]	[[BC]]<=[16]	- - -  - -	10
11[][]	LXI	D,[16]	[[DE]]<=[16]	- - -  - -	10
21[][]	LXI	H,[16]	[[HL]]<=[16]	- - -  - -	10
31[][]	LXI	SP,[16]	[[SP]]<=[16]	- - -  - -	10
===============================================================
3A[][]	LDA	ADDR[16] [A]<=ADDR[16]	- - -  - -	13
32[][]	STA	ADDR[16] ADDR[16]<=[A]	- - -  - -	13
===============================================================
2A[][]	LHLD	ADDR[16] [L]<=ADDR[16]	- - -  - -	16
			 [H]<=ADDR[16]+1
22[][]	SHLD	ADDR[16] ADDR[16]<=[L]	- - -  - -	16
			 ADDR[16]+1<=[H]
===============================================================
0A	LDAX	B	[A]<=[[BC]]	- - -  - -	7
1A	LDAX	D	[A]<=[[DE]]	- - -  - -	7
02	STAX	B	[[BC]]<=[A]	- - -  - -	7
12	STAX	D	[[DE]]<=[A]	- - -  - -	7
===============================================================
EB	XCHG		[HL]<=>[DE]	- - -  - -	4
===============================================================
F9	SPHL		[SP]<=[HL]	- - -  - -	5

E3	XTHL		[L]<=>[[SP]]	- - -  - -	18
			[H]<=>[[SP]+1]
===============================================================
C5	PUSH 	B	[[SP]-1]<=[B]	- - -  - -	11
			[[SP]-2]<=[C]
			[SP]<=[SP]-2

D5	PUSH 	D	[[SP]-1]<=[D]	- - -  - -	11
			[[SP]-2]<=[E]
			[SP]<=[SP]-2

E5	PUSH 	H	[[SP]-1]<=[H]	- - -  - -	11
			[[SP]-2]<=[L]
			[SP]<=[SP]-2

F5	PUSH 	PSW	[[SP]-1]<=[A]	- - -  - -	11
			[[SP]-2]<=[FLAG]
			[SP]<=[SP]-2

C1	POP	B	[C]<=[[SP]]	- - -  - -	11
			[B]<=[[SP]+1]
			[SP]<=[SP]+2

D1	POP	D	[E]<=[[SP]]	- - -  - -	11
			[D]<=[[SP]+1]
			[SP]<=[SP]+2

E1	POP	H	[L]<=[[SP]]	- - -  - -	11
			[H]<=[[SP]+1]
			[SP]<=[SP]+2

F1	POP	PSW	[FLAG]<=[[SP]]	- - -  - -	11
			[A]<=[[SP]+1]
			[SP]<=[SP]+2
===============================================================
DB[]	IN     ADDR[PD]	[A]<=[PD]	- - -  - -	10
D3[]	OUT    ADDR[PD]	[A]<=[PD]	- - -  - -	10
PD = бмсрпеммее сярпниярбн
===============================================================
87	ADD	A	[A]<=[A]+[A]	* * *  * *	4
80	ADD	B	[A]<=[A]+[B]	* * *  * *	4
81	ADD	C	[A]<=[A]+[C]	* * *  * *	4
82	ADD	D	[A]<=[A]+[D]	* * *  * *	4
83	ADD	E	[A]<=[A]+[E]	* * *  * *	4
84	ADD	H	[A]<=[A]+[H]	* * *  * *	4
85	ADD	L	[A]<=[A]+[L]	* * *  * *	4

86	ADD 	M	[A]<=[A]+[[HL]]	* * *  * *	7

C6[]	ADI 	DATA[8]	[A]<=[A]+[8]	* * *  * *	7
===============================================================
8F	ADC	A	[A]<=[A]+[A]+C	* * *  * *	4
88	ADC	B	[A]<=[A]+[B]+C	* * *  * *	4
89	ADC	C	[A]<=[A]+[C]+C	* * *  * *	4
8A	ADC	D	[A]<=[A]+[D]+C	* * *  * *	4
8B	ADC	E	[A]<=[A]+[E]+C	* * *  * *	4
8C	ADC	H	[A]<=[A]+[H]+C	* * *  * *	4
8D	ADC	L	[A]<=[A]+[L]+C	* * *  * *	4

8E	ADC 	M     [A]<=[A]+[[HL]]+C	* * *  * *	7

CE[]	ACI 	DATA[8]	[A]<=[A]+[8]+C	* * *  * *	7
===============================================================
97	SUB	A	[A]<=[A]-[A]	* * *  * *	4
90	SUB	B	[A]<=[A]-[B]	* * *  * *	4
91	SUB	C	[A]<=[A]-[C]	* * *  * *	4
92	SUB	D	[A]<=[A]-[D]	* * *  * *	4
93	SUB	E	[A]<=[A]-[E]	* * *  * *	4
94	SUB	H	[A]<=[A]-[H]	* * *  * *	4
95	SUB	L	[A]<=[A]-[L]	* * *  * *	4

96	SUB 	M	[A]<=[A]-[[HL]]	* * *  * *	7

D6[]	SUI 	DATA[8]	[A]<=[A]-[8]	* * *  * *	7
===============================================================
9F	SBB	A	[A]<=[A]-[A]+C	* * *  * *	4
98	SBB	B	[A]<=[A]-[B]+C	* * *  * *	4
99	SBB	C	[A]<=[A]-[C]+C	* * *  * *	4
9A	SBB	D	[A]<=[A]-[D]+C	* * *  * *	4
9B	SBB	E	[A]<=[A]-[E]+C	* * *  * *	4
9C	SBB	H	[A]<=[A]-[H]+C	* * *  * *	4
9D	SBB	L	[A]<=[A]-[L]+C	* * *  * *	4

9E	SBB 	M     [A]<=[A]-[[HL]]+C	* * *  * *	7

DE[]	SBI 	DATA[8]	[A]<=[A]-[8]+C	* * *  * *	7
===============================================================
3C	INR	A	[A]<=[A]+1	* * *  * -	5
04	INR	B	[B]<=[B]+1	* * *  * -	5
0C	INR	C	[C]<=[C]+1	* * *  * -	5
14	INR	D	[D]<=[D]+1	* * *  * -	5
1C	INR	E	[E]<=[E]+1	* * *  * -	5
24	INR	H	[H]<=[H]+1	* * *  * -	5
2C	INR	L	[L]<=[L]+1	* * *  * -	5

34	INR	M      [[HL]]<=[[HL]]+1	* * *  * -	10

3D	DCR	A	[A]<=[A]-1	* * *  * -	5
05	DCR	B	[B]<=[B]-1	* * *  * -	5
0D	DCR	C	[C]<=[C]-1	* * *  * -	5
15	DCR	D	[D]<=[D]-1	* * *  * -	5
1D	DCR	E	[E]<=[E]-1	* * *  * -	5
25	DCR	H	[H]<=[H]-1	* * *  * -	5
2D	DCR	L	[L]<=[L]-1	* * *  * -	5

35	DCR	M      [[HL]]<=[[HL]]-1	* * *  * -	10

03	INX	B	[BC]<=[BC]+1	- - -  - -	5
13	INX	D	[DE]<=[DE]+1	- - -  - -	5
23	INX	H	[HL]<=[HL]+1	- - -  - -	5
33	INX	SP	[SP]<=[SP]+1	- - -  - -	5

0B	DCX	B	[BC]<=[BC]-1	- - -  - -	5
1B	DCX	D	[DE]<=[DE]-1	- - -  - -	5
2B	DCX	H	[HL]<=[HL]-1	- - -  - -	5
3B	DCX	SP	[SP]<=[SP]-1	- - -  - -	5
==============================================================
09	DAD	B	[HL]<=[HL]+[BC]	- - -  - *	5
19	DAD	D	[HL]<=[HL]+[DE]	- - -  - *	5
29	DAD	H	[HL]<=[HL]+[HL]	- - -  - *	5
39	DAD	SP	[HL]<=[HL]+[SP]	- - -  - *	5
==============================================================
27 	DAA				* * *  * *	4
==============================================================
A7	ANA	A	[A]<=[A]&[A]	* * *  * 0	4
A0	ANA	B	[A]<=[A]&[B]	* * *  * 0	4
A1	ANA	C	[A]<=[A]&[C]	* * *  * 0	4
A2	ANA	D	[A]<=[A]&[D]	* * *  * 0	4
A3	ANA	E	[A]<=[A]&[E]	* * *  * 0	4
A4	ANA	H	[A]<=[A]&[H]	* * *  * 0	4
A5	ANA	L	[A]<=[A]&[L]	* * *  * 0	4

A6	ANA 	M	[A]<=[A]&[[HL]]	* * *  * 0	7

E6[]	ANI 	DATA[8]	[A]<=[A]&[8]	* * *  * 0	7
==============================================================
AF	XRA	A	[A]<=[A]^[A]				* 1 0  1 0	4
A8	XRA	B	[A]<=[A]^[B]				* * 0  * 0	4
A9	XRA	C	[A]<=[A]^[C]				* * 0  * 0	4
AA	XRA	D	[A]<=[A]^[D]				* * 0  * 0	4
AB	XRA	E	[A]<=[A]^[E]				* * 0  * 0	4
AC	XRA	H	[A]<=[A]^[H]				* * 0  * 0	4
AD	XRA	L	[A]<=[A]^[L]				* * 0  * 0	4

AE	XRA 	M    [A]<=[A]^[[HL]]		* * 0  * 0	7

EE[]	XRI 	DATA[8]	[A]<=[A]^[8]	* * 0  * 0	7
==============================================================
B7	ORA	A	[A]<=[A]|[A]				* * 0  * 0	4
B0	ORA	B	[A]<=[A]|[B]				* * 0  * 0	4
B1	ORA	C	[A]<=[A]|[C]				* * 0  * 0	4
B2	ORA	D	[A]<=[A]|[D]				* * 0  * 0	4
B3	ORA	E	[A]<=[A]|[E]				* * 0  * 0	4
B4	ORA	H	[A]<=[A]|[H]				* * 0  * 0	4
B5	ORA	L	[A]<=[A]|[L]				* * 0  * 0	4

B6	ORA 	M	[A]<=[A]|[[HL]]			* * 0  * 0	7

F6[]	ORI 	DATA[8]	[A]<=[A]|[8]	* * 0  * 0	7
==============================================================
BF	CMP	A	[A]-[A]						0 1 0  1 0	4
B8	CMP	B	[A]-[B]						* * *  * *	4
B9	CMP	C	[A]-[C]						* * *  * *	4
BA	CMP	D	[A]-[D]						* * *  * *	4
BB	CMP	E	[A]-[E]						* * *  * *	4
BC	CMP	H	[A]-[H]						* * *  * *	4
BD	CMP	L	[A]-[L]						* * *  * *	4

BE	CMP 	M    	[A]-[[HL]]			* * *  * *	7

FE[]	CPI 	DATA[8]	[A]-[8]			* * *  * *	7
==============================================================
2F	CMA		[A]<=-[A]					- - -  - -	4
==============================================================
07	RLC		LSH[A]<=C					- - -  - *	4
0F	RRC		RSH[A]<=C					- - -  - *	4
17	RAL		LSH[A]+C					- - -  - *	4
1F	RAR		RSH[A]+C					- - -  - *	4
==============================================================
C3[][]	JMP ADDR[16]	[PC]<=[16]		- - -  - -	10

C2[][]	JNZ ADDR[16]	Z=0 JMP [16]	- - -  - -	10
CA[][]	JZ ADDR[16]	Z=1 JMP [16]		- - -  - -	10

D2[][]	JNC ADDR[16]	C=0 JMP [16]	- - -  - -	10
DA[][]	JC ADDR[16]	C=1 JMP [16]		- - -  - -	10

E2[][]	JPO ADDR[16]	P=0 JMP [16]	- - -  - -	10
EA[][]	JPE ADDR[16]	P=1 JMP [16]	- - -  - -	10

F2[][]	JP ADDR[16]	S=0 JMP [16]		- - -  - -	10
FA[][]	JM ADDR[16]	S=1 JMP [16]		- - -  - -	10
==============================================================
CD[][]	CALL ADDR[16]	[[SP]-1]<=[PCH]	- - -  - -	17
						[[SP]-2]<=[PCL]
						[SP]<=[SP]-2
						[PC]<=ADDR[16]
							 IF
						     FALSE TRUE
C4[][]	CNZ ADDR[16]	Z=0 CALL [16]	- - -  - -	11/17
CC[][]	CZ ADDR[16]	Z=1 CALL [16]		- - -  - -	11/17

D4[][]	CNC ADDR[16]	C=0 CALL [16]	- - -  - -	11/17
DC[][]	CC ADDR[16]	C=1 CALL [16]		- - -  - -	11/17

E4[][]	CPO ADDR[16]	P=0 CALL [16]	- - -  - -	11/17
EC[][]	CPE ADDR[16]	P=1 CALL [16]	- - -  - -	11/17

F4[][]	CP ADDR[16]	S=0 CALL [16]		- - -  - -	11/17
FC[][]	CM ADDR[16]	S=1 CALL [16]		- - -  - -	11/17
==============================================================
C9	RET			[PCL]<=[[SP]]			- - -  - -	10
				[PCH]<=[[SP]+1]
				[SP]<=[SP]+2
													IF
												FALSE TRUE
C0	RNZ ADDR[16]Z=0 RET					- - -  - -	5/11
C8	RZ ADDR[16]	Z=1 RET					- - -  - -	5/11
	
D0	RNC ADDR[16]C=0 RET					- - -  - -	5/11
D8	RC ADDR[16]	C=1 RET					- - -  - -	5/11

E0	RPO ADDR[16]P=0 RET					- - -  - -	5/11
E8	RPE ADDR[16]P=1 RET					- - -  - -	5/11

F0	RP ADDR[16]	S=0 RET					- - -  - -	5/11
F8	RM ADDR[16]	S=1 RET					- - -  - -	5/11
==============================================================
E9	PCHL	[PC]<=[HL]					- - -  - -	5
==============================================================
C7	RST 0	[[SP]-1]<=[PCH] 			- - -  - -	11
			[[SP]-2]<=[PCL]
			[SP]<=[SP]-2
			[PC]<=0000H

CF	RST 1	[[SP]-1]<=[PCH] 			- - -  - -	11
			[[SP]-2]<=[PCL]
			[SP]<=[SP]-2
			[PC]<=0008H

D7	RST 2	[[SP]-1]<=[PCH] 			- - -  - -	11
			[[SP]-2]<=[PCL]
			[SP]<=[SP]-2
			[PC]<=0010H

DF	RST 3	[[SP]-1]<=[PCH] 			- - -  - -	11
			[[SP]-2]<=[PCL]
			[SP]<=[SP]-2
			[PC]<=0018H

E7	RST 4	[[SP]-1]<=[PCH] 			- - -  - -	11
			[[SP]-2]<=[PCL]
			[SP]<=[SP]-2
			[PC]<=0020H

EF	RST 5	[[SP]-1]<=[PCH] 			- - -  - -	11
			[[SP]-2]<=[PCL]
			[SP]<=[SP]-2
			[PC]<=0028H

F7	RST 6	[[SP]-1]<=[PCH] 			- - -  - -	11
			[[SP]-2]<=[PCL]
			[SP]<=[SP]-2
			[PC]<=0030H

FF	RST 7	[[SP]-1]<=[PCH] 			- - -  - -	11
			[[SP]-2]<=[PCL]
			[SP]<=[SP]-2
			[PC]<=0038H
==============================================================
FB	EI	    ENABLE INTERRUPTS			- - -  - -	4
F3	DI	    DISABLE INTERRUPTS			- - -  - -	4
76	HLT		STOP WORK					- - -  - -	4
00	NOP		NO OPERATION				- - -  - -	4
37	STC		C<=1						- - -  - 1	4
3F	CMC		C<=-C						- - -  - *	4
===============================================================
--------------------- Z80 added instructions ------------------
08	EX AF, AF'	[A] <=> [A']			- - -  - -	4
				[F] <=> [F']

D9	EXX			[BC] <=> [BC']			- - -  - -	4
				[DE] <=> [DE']
				[HL] <=> [HL']
==========================================================
18	JR DATA[8]		[PC]<=[PC]+[8]			- - -  - -	12
28	JR Z DATA[8]	Z=0 JR DATA[8]			- - -  - -	12/7
38	JR C DATA[8]	C=0 JR DATA[8]			- - -  - -	12/7
20	JR NZ DATA[8]	Z!=0 JR DATA[8]			- - -  - -	12/7
30  JR NC DATA[8]	C!=0 JR DATA[8]			- - -  - -	12/7
==========================================================
10	DJNZ[8]		[B]--					- - -  - - 	13/8
				[B]!=0 => PC+=[8]
; like cycle "for"
==========================================================
ED 				EXTENDED INSTRUCTIONS
----------------------------------------------------------
ED 40	IN B,ADDR[PD]
ED 50	IN D,ADDR[PD]
ED 60	IN H,ADDR[PD]
ED 60	IN FLAGS <- ADDR[PD]
ED 41	OUT B,ADDR[PD]
ED 51	OUT D,ADDR[PD]
ED 61	OUT H,ADDR[PD]
ED 71	OUT 0,ADDR[PD]
-----------------------------------------------------------







